{"version":3,"sources":["food/food.js","components/Notify.js","helpers.js","App.js","index.js"],"names":["MakeFood","name","price","this","pizzas","Sicilian","Caprese","Pepperoni","Margherita","Napoletana","pasta","Ravioli","Fusilli","Penne","Rigatoni","Farfalle","sideDishes","Mustard","Mayo","Ketchup","Salt","Pepper","MakeDrink","volume","call","drinks","Cola","Sprite","Tea","personsAtTable","person","order","orderFood","Notify","errMsg","infoMsg","setErrMsg","setInfoMsg","useEffect","setTimeout","className","style","display","color","border","orderTime","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","generateId","Math","floor","random","App","pizzasArr","Object","values","pastaArr","sideDishesArr","drinksArr","personsArr","Array","from","length","useState","tableOne","setTableOne","tableTwo","setTableTwo","tableThree","setTableThree","tableFour","setTableFour","oneCanOrder","setOneCanOrder","twoCanOrder","setTwoCanOrder","threeCanOrder","setThreeCanOrder","fourCanOrder","setFourCanOrder","tOnePrice","setTOnePrice","tTwoPrice","setTTwoPrice","tThreePrice","setTThreePrice","tFourPrice","setTFourPrice","profit","orderConsole","setOrderConsole","setOrder","tableNum","personNum","resetOrder","elem","makeOneOrder","pNum","map","complete","allOrdersFalseForTable","tablePay","showTableOrder","index","table","showFoodChoices","food","onClick","personFind","find","concat","addFood","_person","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f02b639a.chunk.js","sourcesContent":["function MakeFood(name, price) {\r\n  this.name = name;\r\n  this.price = price;\r\n}\r\n\r\nconst Sicilian = new MakeFood(\"Sicilian üçï\", 330);\r\n\r\nconst Caprese = new MakeFood(\"Caprese üçï\", 380);\r\n\r\nconst Pepperoni = new MakeFood(\"Pepperoni üçï\", 420);\r\n\r\nconst Margherita = new MakeFood(\"Margherita üçï\", 470);\r\n\r\nconst Napoletana = new MakeFood(\"Napoletana üçï\", 300);\r\n\r\nexport const pizzas = {\r\n  Sicilian,\r\n  Caprese,\r\n  Pepperoni,\r\n  Margherita,\r\n  Napoletana,\r\n};\r\n\r\nconst Ravioli = new MakeFood(\"Ravioli üçù\", 330);\r\n\r\nconst Fusilli = new MakeFood(\"Fusili üçù\", 330);\r\n\r\nconst Penne = new MakeFood(\"Penne üçù\", 400);\r\n\r\nconst Rigatoni = new MakeFood(\"Rigatoni üçù\", 360);\r\n\r\nconst Farfalle = new MakeFood(\"Farfalle üçù\", 360);\r\n\r\nexport const pasta = {\r\n  Ravioli,\r\n  Fusilli,\r\n  Penne,\r\n  Rigatoni,\r\n  Farfalle,\r\n};\r\n\r\nconst Mustard = new MakeFood(\"Mustard üßÇ\", 10);\r\n\r\nconst Mayo = new MakeFood(\"Mayo üçº\", 10);\r\n\r\nconst Ketchup = new MakeFood(\"Ketchup üçÖ\", 10);\r\n\r\nconst Salt = new MakeFood(\"Salt üßÇ\", 10);\r\n\r\nconst Pepper = new MakeFood(\"Pepper üßÇ\", 10);\r\n\r\nexport const sideDishes = {\r\n  Mustard,\r\n  Mayo,\r\n  Ketchup,\r\n  Salt,\r\n  Pepper,\r\n};\r\n\r\nfunction MakeDrink(name, price, volume) {\r\n  MakeFood.call(this, name, price);\r\n  this.volume = volume;\r\n}\r\n\r\nconst Cola = new MakeDrink(\"Coca Cola üß¥\", 150, 330);\r\n\r\nconst Sprite = new MakeDrink(\"Beer üç∫\", 180, 330);\r\n\r\nconst Tea = new MakeDrink(\"Tea üçµ\", 150, 200);\r\n\r\nexport const drinks = {\r\n  Cola,\r\n  Sprite,\r\n  Tea,\r\n};\r\n\r\nexport const personsAtTable = [\r\n  { person: 1, order: false, orderFood: [] },\r\n  { person: 2, order: false, orderFood: [] },\r\n  { person: 3, order: false, orderFood: [] },\r\n  { person: 4, order: false, orderFood: [] },\r\n];\r\n","import React, { useEffect } from \"react\";\r\n\r\nconst Notify = ({ errMsg, infoMsg, setErrMsg, setInfoMsg }) => {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setErrMsg(\"\");\r\n    }, 3000);\r\n  }, [errMsg]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setInfoMsg(\"\");\r\n    }, 3000);\r\n  }, [infoMsg]);\r\n\r\n  return (\r\n    <>\r\n      {errMsg && (\r\n        <div\r\n          className=\"notification\"\r\n          style={{ display: errMsg ? \"visible\" : \"hidden\" }}\r\n        >\r\n          <p style={{ color: \"red\" }}>{errMsg}</p>\r\n        </div>\r\n      )}\r\n      {infoMsg && (\r\n        <div\r\n          className=\"notification\"\r\n          style={{\r\n            display: infoMsg ? \"visible\" : \"hidden\",\r\n            border: \"1px solid green\",\r\n          }}\r\n        >\r\n          <p style={{ color: \"green\" }}>{infoMsg}</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notify;\r\n","export const orderTime = () => {\r\n  const date = new Date();\r\n  return `${date.getDate()}/${date.getMonth()}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`;\r\n};\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { pizzas, pasta, sideDishes, drinks, personsAtTable } from \"./food/food\";\nimport Notify from \"./components/Notify\";\nimport { orderTime } from \"./helpers\";\nconst generateId = () => Math.floor(Math.random() * 100000);\n\nfunction App() {\n  const pizzasArr = Object.values(pizzas);\n  const pastaArr = Object.values(pasta);\n  const sideDishesArr = Object.values(sideDishes);\n  const drinksArr = Object.values(drinks);\n  const personsArr = Array.from({ length: 4 });\n\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [infoMsg, setInfoMsg] = useState(\"\");\n\n  const [tableOne, setTableOne] = useState([...personsAtTable]);\n  const [tableTwo, setTableTwo] = useState([...personsAtTable]);\n  const [tableThree, setTableThree] = useState([...personsAtTable]);\n  const [tableFour, setTableFour] = useState([...personsAtTable]);\n\n  const [oneCanOrder, setOneCanOrder] = useState(true);\n  const [twoCanOrder, setTwoCanOrder] = useState(true);\n  const [threeCanOrder, setThreeCanOrder] = useState(true);\n  const [fourCanOrder, setFourCanOrder] = useState(true);\n\n  const [tOnePrice, setTOnePrice] = useState(0);\n  const [tTwoPrice, setTTwoPrice] = useState(0);\n  const [tThreePrice, setTThreePrice] = useState(0);\n  const [tFourPrice, setTFourPrice] = useState(0);\n\n  const [orderConsole, setOrderConsole] = useState({\n    tableOne: \"\",\n    tableTwo: \"\",\n    tableThree: \"\",\n    tableFour: \"\",\n    profit: 0,\n  });\n\n  function setOrder(tableNum, personNum) {\n    const resetOrder = (elem) => {\n      return { ...elem, order: false };\n    };\n\n    const makeOneOrder = (pNum) => {\n      return function (elem) {\n        return elem.person == pNum\n          ? { ...elem, order: true }\n          : { ...elem, order: false };\n      };\n    };\n\n    setTableOne(tableOne.map(resetOrder));\n    setTableTwo(tableTwo.map(resetOrder));\n    setTableThree(tableThree.map(resetOrder));\n    setTableFour(tableFour.map(resetOrder));\n\n    if (\n      (tableNum == 1 && !oneCanOrder) ||\n      (tableNum == 2 && !twoCanOrder) ||\n      (tableNum == 3 && !threeCanOrder) ||\n      (tableNum == 4 && !fourCanOrder)\n    ) {\n      setErrMsg(\"You first need to pay bill\");\n    }\n\n    if (tableNum == 1 && oneCanOrder) {\n      setInfoMsg(\"You can Make Order\");\n      setTableOne(tableOne.map(makeOneOrder(personNum)));\n    } else if (tableNum == 2 && twoCanOrder) {\n      setInfoMsg(\"You can Make Order\");\n      setTableTwo(tableTwo.map(makeOneOrder(personNum)));\n    } else if (tableNum == 3 && threeCanOrder) {\n      setInfoMsg(\"You can Make Order\");\n      setTableThree(tableThree.map(makeOneOrder(personNum)));\n    } else if (tableNum == 4 && fourCanOrder) {\n      setInfoMsg(\"You can Make Order\");\n      setTableFour(tableFour.map(makeOneOrder(personNum)));\n    }\n  }\n\n  function complete(tableNum) {\n    const allOrdersFalseForTable = (elem) => {\n      return { ...elem, order: false };\n    };\n\n    if (tableNum === 1) {\n      if (tOnePrice < 200) {\n        setErrMsg(\"Please order more :)\");\n        return;\n      }\n      setTableOne(tableOne.map(allOrdersFalseForTable));\n      setOneCanOrder(false);\n      setOrderConsole({\n        ...orderConsole,\n        tableOne: `Order: date ${orderTime()}, table number ${tableNum}`,\n      });\n    } else if (tableNum === 2) {\n      if (tTwoPrice < 200) {\n        setErrMsg(\"Please order more :)\");\n        return;\n      }\n      setTableTwo(tableTwo.map(allOrdersFalseForTable));\n      setTwoCanOrder(false);\n      setOrderConsole({\n        ...orderConsole,\n        tableTwo: `Order: date ${orderTime()}, table number ${tableNum}`,\n      });\n    } else if (tableNum === 3) {\n      if (tThreePrice < 200) {\n        setErrMsg(\"Please order more :)\");\n        return;\n      }\n      setTableThree(tableThree.map(allOrdersFalseForTable));\n      setThreeCanOrder(false);\n      setOrderConsole({\n        ...orderConsole,\n        tableThree: `Order: date ${orderTime()}, table number ${tableNum}`,\n      });\n    } else if (tableNum === 4) {\n      if (tFourPrice < 200) {\n        setErrMsg(\"Please order more :)\");\n        return;\n      }\n      setTableFour(tableFour.map(allOrdersFalseForTable));\n      setFourCanOrder(false);\n      setOrderConsole({\n        ...orderConsole,\n        tableFour: `Order: date ${orderTime()}, table number ${tableNum}`,\n      });\n    }\n  }\n\n  function addFood(food) {\n    const personFind = (tableNum) => {\n      if (tableNum === 1 && tableOne.find((table) => table.order)) {\n        setTOnePrice(tOnePrice + food.price);\n      } else if (tableNum === 2 && tableTwo.find((table) => table.order)) {\n        setTTwoPrice(tTwoPrice + food.price);\n      } else if (tableNum === 3 && tableThree.find((table) => table.order)) {\n        setTThreePrice(tThreePrice + food.price);\n      } else if (tableNum === 4 && tableFour.find((table) => table.order)) {\n        setTFourPrice(tFourPrice + food.price);\n      }\n      return function (elem) {\n        return elem.order\n          ? { ...elem, orderFood: elem.orderFood.concat(food) }\n          : elem;\n      };\n    };\n    setTableOne(tableOne.map(personFind(1)));\n    setTableTwo(tableTwo.map(personFind(2)));\n    setTableThree(tableThree.map(personFind(3)));\n    setTableFour(tableFour.map(personFind(4)));\n  }\n\n  const tablePay = (tableNum) => {\n    setInfoMsg(\"We hope we will see you again\");\n    if (tableNum === 1) {\n      setTableOne([...personsAtTable]);\n      setOneCanOrder(true);\n      setTOnePrice(0);\n      setOrderConsole({\n        ...orderConsole,\n        tableOne: `Paid: date ${orderTime()}, table number ${tableNum}, price ${tOnePrice}`,\n        profit: orderConsole.profit + tOnePrice,\n      });\n    } else if (tableNum === 2) {\n      setTableTwo([...personsAtTable]);\n      setTwoCanOrder(true);\n      setTTwoPrice(0);\n      setOrderConsole({\n        ...orderConsole,\n        tableTwo: `Paid: date ${orderTime()}, table number ${tableNum}, price ${tTwoPrice}`,\n        profit: orderConsole.profit + tTwoPrice,\n      });\n    } else if (tableNum === 3) {\n      setTableThree([...personsAtTable]);\n      setThreeCanOrder(true);\n      setTThreePrice(0);\n      setOrderConsole({\n        ...orderConsole,\n        tableThree: `Paid: date ${orderTime()}, table number ${tableNum}, price ${tThreePrice}`,\n        profit: orderConsole.profit + tThreePrice,\n      });\n    } else if (tableNum === 4) {\n      setTableFour([...personsAtTable]);\n      setFourCanOrder(true);\n      setTFourPrice(0);\n      setOrderConsole({\n        ...orderConsole,\n        tableFour: `Paid: date ${orderTime()}, table number ${tableNum}, price ${tFourPrice}`,\n        profit: orderConsole.profit + tFourPrice,\n      });\n    }\n  };\n\n  const showTableOrder = (index) => {\n    return function (table) {\n      if (table.person === index + 1) {\n        return table.orderFood.map((order) => {\n          return (\n            <div key={generateId()}>\n              <small>{order.name}</small>\n            </div>\n          );\n        });\n      }\n    };\n  };\n\n  const showFoodChoices = (food) => {\n    return (\n      <button\n        className=\"btn-pizza\"\n        onClick={() => addFood(food)}\n        key={food.name}\n      >\n        {food.name}\n      </button>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"pizzas\">{pizzasArr.map(showFoodChoices)}</div>\n      <div className=\"pasta\">{pastaArr.map(showFoodChoices)}</div>\n      <div className=\"pasta\">{sideDishesArr.map(showFoodChoices)}</div>\n      <div className=\"pasta\">{drinksArr.map(showFoodChoices)}</div>\n      <Notify\n        errMsg={errMsg}\n        setErrMsg={setErrMsg}\n        infoMsg={infoMsg}\n        setErrMsg={setErrMsg}\n        setInfoMsg={setInfoMsg}\n      />\n\n      <div className=\"all-tables\">\n        <div className=\"table1\">\n          {personsArr.map((_person, index) => {\n            return (\n              <div className=\"person\" key={generateId()}>\n                <p>Person {index + 1}</p>\n                <button onClick={() => setOrder(1, index + 1)}>Order</button>\n                {tableOne.map(showTableOrder(index))}\n              </div>\n            );\n          })}\n          <div className=\"house-control\">\n            <button\n              className=\"complete\"\n              onClick={() => complete(1)}\n              style={{\n                backgroundColor: oneCanOrder ? \"white\" : \"red\",\n                color: oneCanOrder ? \"black\" : \"white\",\n                border: !oneCanOrder && \"none\",\n              }}\n            >\n              Complete\n            </button>\n            <button onClick={() => tablePay(1)}>Paid</button>\n          </div>\n          <div className=\"price\">\n            Price <span>{tOnePrice}</span>\n          </div>\n        </div>\n        <div className=\"table2\">\n          {personsArr.map((_person, index) => {\n            return (\n              <div className=\"person\">\n                <p>Person {index + 1}</p>\n                <button onClick={() => setOrder(2, index + 1)}>Order</button>\n                {tableTwo.map(showTableOrder(index))}\n              </div>\n            );\n          })}\n          <div className=\"house-control\">\n            <button\n              className=\"complete\"\n              onClick={() => complete(2)}\n              style={{\n                backgroundColor: twoCanOrder ? \"white\" : \"red\",\n                color: twoCanOrder ? \"black\" : \"white\",\n                border: !twoCanOrder && \"none\",\n              }}\n            >\n              Complete\n            </button>\n            <button onClick={() => tablePay(2)}>Paid</button>\n          </div>\n          <div className=\"price\">\n            Price <span>{tTwoPrice}</span>\n          </div>\n        </div>\n        <div className=\"table3\">\n          {personsArr.map((_person, index) => {\n            return (\n              <div className=\"person\" key={generateId()}>\n                <p>Person {index + 1}</p>\n                <button onClick={() => setOrder(3, index + 1)}>Order</button>\n                {tableThree.map(showTableOrder(index))}\n              </div>\n            );\n          })}\n          <div className=\"house-control\">\n            <button\n              className=\"complete\"\n              onClick={() => complete(3)}\n              style={{\n                backgroundColor: threeCanOrder ? \"white\" : \"red\",\n                color: threeCanOrder ? \"black\" : \"white\",\n                border: !threeCanOrder && \"none\",\n              }}\n            >\n              Complete\n            </button>\n            <button onClick={() => tablePay(3)}>Paid</button>\n          </div>\n          <div className=\"price\">\n            Price <span>{tThreePrice}</span>\n          </div>\n        </div>\n        <div className=\"table4\">\n          {personsArr.map((_person, index) => {\n            return (\n              <div className=\"person\" key={generateId()}>\n                <p>Person {index + 1}</p>\n                <button onClick={() => setOrder(4, index + 1)}>Order</button>\n                {tableFour.map(showTableOrder(index))}\n              </div>\n            );\n          })}\n          <div className=\"house-control\">\n            <button\n              className=\"complete\"\n              onClick={() => complete(4)}\n              style={{\n                backgroundColor: fourCanOrder ? \"white\" : \"red\",\n                color: fourCanOrder ? \"black\" : \"white\",\n                border: !fourCanOrder && \"none\",\n              }}\n            >\n              Complete\n            </button>\n            <button onClick={() => tablePay(4)}>Paid</button>\n          </div>\n          <div className=\"price\">\n            Price <span>{tFourPrice}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"console\">\n        <p>{orderConsole.tableOne && orderConsole.tableOne}</p>\n        <p>{orderConsole.tableTwo && orderConsole.tableTwo}</p>\n        <p>{orderConsole.tableThree && orderConsole.tableThree}</p>\n        <p>{orderConsole.tableFour && orderConsole.tableFour}</p>\n        <p>\n          Total Earnings: <span className=\"profit\">{orderConsole.profit}</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}